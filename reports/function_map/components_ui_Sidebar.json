{
  "directory": "src/components/ui",
  "generatedAt": "2025-09-13T09:10:41+02:00",
  "file": "src/components/ui/sidebar.tsx",
  "exports": [
    "Sidebar",
    "SidebarContent",
    "SidebarFooter",
    "SidebarGroup",
    "SidebarGroupAction",
    "SidebarGroupContent",
    "SidebarGroupLabel",
    "SidebarHeader",
    "SidebarInput",
    "SidebarInset",
    "SidebarMenu",
    "SidebarMenuAction",
    "SidebarMenuBadge",
    "SidebarMenuButton",
    "SidebarMenuItem",
    "SidebarMenuSkeleton",
    "SidebarMenuSub",
    "SidebarMenuSubButton",
    "SidebarMenuSubItem",
    "SidebarProvider",
    "SidebarRail",
    "SidebarSeparator",
    "SidebarTrigger",
    "useSidebar"
  ],
  "component_summary": {
    "name": "Sidebar",
    "type": "Composable UI primitives + provider",
    "description": "A comprehensive, responsive sidebar implementation with a provider for shared state. Supports desktop/ mobile behaviors, collapsible icon/rail modes, off-canvas mobile sheet, keyboard shortcut toggle, and a rich set of subcomponents for menu buttons, groups, skeletons, badges, actions and more. Relies on SidebarHelpers constants and several small UI primitives (Button, Input, Sheet, Tooltip, Separator)."
  },
  "behaviors_and_features": [
    "SidebarProvider: manages shared sidebar state (open/collapsed, mobile open), persists desktop open state to cookie, exposes toggleSidebar and keyboard shortcut handling.",
    "Responsive behavior: mobile uses Sheet with SIDEBAR_WIDTH_MOBILE; desktop shows collapsible sidebar with data-state attributes used for styling.",
    "Collapsible modes: 'offcanvas', 'icon', and 'none' supported with different DOM/layout behavior.",
    "Rich primitive set: SidebarMenuButton uses cva variants for size/variant; supports tooltips when collapsed; SidebarMenuSkeleton provides skeleton loading UI.",
    "Accessibility: many subcomponents provide aria attributes (e.g., SidebarRail aria-label)."
  ],
  "notes": [
    "Contains substantial UI logic (provider, cookie persistence, keyboard shortcut).",
    "Duplication candidates: cva variant patterns and collapse/resize styling are similar to other UI modules; helper constants live in helpers/sidebarHelpers â€” good centralization.",
    "Refactor suggestions: keep provider logic here; extract any pure utilities (cookie handling, keyboard shortcut registration) into small reusable hooks if needed elsewhere."
  ]
}
