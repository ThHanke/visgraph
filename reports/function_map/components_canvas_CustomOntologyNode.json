{
  "directory": "src/components/Canvas",
  "generatedAt": "2025-09-13T08:36:25+02:00",
  "file": "src/components/Canvas/CustomOntologyNode.tsx",
  "exports": [
    "CustomOntologyNode"
  ],
  "component_summary": {
    "name": "CustomOntologyNode",
    "type": "React.memo functional component",
    "description": "Renderable React Flow node that displays node header (IRI/prefixed label), type badge, annotation properties, and error indicator. Computes badge color via namespace palette and uses computeTermDisplay to resolve IRIs into prefixed/short forms. Reports DOM size using ResizeObserver to support accurate dagre layouts."
  },
  "functions_and_behaviors": [
    {
      "name": "CustomOntologyNodeInner",
      "description": "Core rendering logic: computes label via computeTermDisplay, derives badge color from palette and namespace, composes annotations list, measures DOM size and reports via data.onSizeMeasured callback. Uses useOntologyStore.getState() to access rdfManager and availableClasses to avoid prop churn."
    },
    {
      "name": "darken",
      "signature": "(hex: string, amount: number) => string",
      "description": "Utility to darken a hex color for borders. Simple RGB multiply approach. Used to compute badge border color."
    },
    {
      "name": "ResizeObserver setup",
      "description": "Uses ResizeObserver to measure node DOM dimensions and calls onSizeMeasured callback supplied in node.data to enable layout engine to use actual node sizes."
    }
  ],
  "notes": [
    "Displays and computes a number of RDF- and UI-focused values (computeTermDisplay, palette lookup, annotation shortening).",
    "Duplication candidates: computeTermDisplay usage aligns with other components and stores — centralize prefix/name utilities for consistency. Palette/color selection logic duplicates other palette helpers — consider consolidating palette lookup into a single helper module consumed by node and canvas.",
    "Measurement and ResizeObserver logic is specific to React Flow node rendering and is appropriate here."
  ]
}
